# Generated by Django 4.2.10 on 2024-08-17 13:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Доступно к покупке'),
        ),
        migrations.AddField(
            model_name='course',
            name='price',
            field=models.PositiveIntegerField(default=None, verbose_name='Стоимость'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='group',
            name='free_seats',
            field=models.IntegerField(default=10, verbose_name='Свободные_места'),
        ),
        migrations.AddField(
            model_name='group',
            name='group_name',
            field=models.CharField(default=None, max_length=100, verbose_name='Имя группы'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lesson',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course', verbose_name='Курс'),
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.group')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Участие',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(through='courses.Membership', to=settings.AUTH_USER_MODEL),
        ),
    ]
